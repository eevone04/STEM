package asg.Event;

import asg.Asg;
import asg.Event.DisplayEvent;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.sql.*;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;

public class EditEvent extends javax.swing.JFrame implements DocumentListener {
    public int start, end, time;
    public String eventTitle,venue,eventDes,date,startTime,endTime,loggedInUsername,currentUserType;
    
    public EditEvent() {
        initComponents();
        EventTitle.getDocument().addDocumentListener(this);
        EventDes.getDocument().addDocumentListener(this);
        Venue.getDocument().addDocumentListener(this);
        setLocationRelativeTo(null);
    }
    
    public EditEvent(String loggedInUsername,String currentUserType) {
        initComponents();
        EventTitle.getDocument().addDocumentListener(this);
        EventDes.getDocument().addDocumentListener(this);
        Venue.getDocument().addDocumentListener(this);
        this.loggedInUsername = loggedInUsername;
        this.currentUserType = currentUserType;
        setLocationRelativeTo(null);
        System.out.println("Username "+loggedInUsername);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        IdEdit = new javax.swing.JTextField();
        EventTitle = new javax.swing.JTextField();
        EventDes = new javax.swing.JTextField();
        Venue = new javax.swing.JTextField();
        DateChooser = new com.toedter.calendar.JDateChooser();
        StartTime = new javax.swing.JComboBox<>();
        EndTime = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        SearchButton = new javax.swing.JButton();
        UpdateButton = new javax.swing.JButton();
        BackButton = new javax.swing.JButton();
        ClearButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Edit Event");

        jLabel2.setText("Id:");

        jLabel3.setText("Event Title:");

        jLabel4.setText("Event Description:");

        jLabel5.setText("Event Venue:");

        jLabel6.setText("Event Date:");

        jLabel7.setText("Event Time:");

        IdEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IdEditActionPerformed(evt);
            }
        });

        EventTitle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EventTitleActionPerformed(evt);
            }
        });

        EventDes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EventDesActionPerformed(evt);
            }
        });

        Venue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VenueActionPerformed(evt);
            }
        });

        StartTime.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "8:00", "9:00", "10:00", "11:00", "12:00", "13:00", "14:00", "15:00", "16:00", "17:00", "18:00", "19:00", "20:00", "21:00", "22:00", "23:00", "00:00" }));

        EndTime.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "8:00", "9:00", "10:00", "11:00", "12:00", "13:00", "14:00", "15:00", "16:00", "17:00", "18:00", "19:00", "20:00", "21:00", "22:00", "23:00", "00:00" }));

        jLabel8.setText("TO");

        SearchButton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        SearchButton.setText("Search");
        SearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchButtonActionPerformed(evt);
            }
        });

        UpdateButton.setText("Update");
        UpdateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateButtonActionPerformed(evt);
            }
        });

        BackButton.setText("Back");
        BackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackButtonActionPerformed(evt);
            }
        });

        ClearButton.setText("Clear");
        ClearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(105, 105, 105)
                        .addComponent(jLabel1))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(119, 119, 119)
                            .addComponent(StartTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jLabel8)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(UpdateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(EndTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createSequentialGroup()
                            .addContainerGap()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel2)
                                    .addGap(18, 18, 18)
                                    .addComponent(IdEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(SearchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel4)
                                        .addComponent(jLabel3)
                                        .addComponent(jLabel5)
                                        .addComponent(jLabel6)
                                        .addComponent(jLabel7)
                                        .addComponent(BackButton, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(18, 18, 18)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(EventDes, javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(EventTitle, javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(DateChooser, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(Venue, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(ClearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(88, 88, 88))))))))
                .addContainerGap(49, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(IdEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SearchButton)
                    .addComponent(jLabel2))
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(EventTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(EventDes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Venue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(DateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(StartTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(EndTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(UpdateButton)
                    .addComponent(BackButton)
                    .addComponent(ClearButton))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchButtonActionPerformed
        search();
    }//GEN-LAST:event_SearchButtonActionPerformed

    private void IdEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IdEditActionPerformed
        
    }//GEN-LAST:event_IdEditActionPerformed

    private void EventDesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EventDesActionPerformed
        eventDes = EventDes.getText();
    }//GEN-LAST:event_EventDesActionPerformed

    private void UpdateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateButtonActionPerformed
        startTime = (String)StartTime.getSelectedItem();
        System.out.println(startTime);
        String[] parts = startTime.split(":");
        start = Integer.parseInt(parts[0]);
        System.out.println(start);
        
        endTime = (String)EndTime.getSelectedItem();
        System.out.println(endTime);
        String[] parts1 = endTime.split(":");
        end = Integer.parseInt(parts1[0]);
        System.out.println(end);
        
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        date = sdf.format(DateChooser.getDate());
        System.out.println("Date: "+date);

        time = end - start;
        if(time<=0){
            JOptionPane.showMessageDialog(this, "Time not valid, please select again");
        }
        else if(EventTitle.getText().isEmpty()||Venue.getText().isEmpty() ||DateChooser.getDate()==null){
            JOptionPane.showMessageDialog(this, "Please make sure title, venue or date is not blank!");
        }
        else{
            Connection connection = null;
        
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            connection = DriverManager.getConnection(
                "jdbc:mysql://localhost:3306/event",
                "root", "SQL123123");
            System.out.println("Success");
            String sql = "UPDATE event_create SET Name=?, Description=?, Venue=?, Date=?, Start_Time=?, End_Time=?, Duration_Hour=? WHERE id=?";
            PreparedStatement pstmt = connection.prepareStatement(sql);
            
            // Set values for the event attributes
            pstmt.setString(1, eventTitle);
            pstmt.setString(2, eventDes);
            pstmt.setString(3, venue);
            pstmt.setString(4, date);
            pstmt.setString(5, startTime);
            pstmt.setString(6,endTime);
            pstmt.setLong(7,time);
            pstmt.setInt(8, Integer.parseInt(IdEdit.getText()));
            
            int rowsInserted = pstmt.executeUpdate();
            if (rowsInserted > 0) {
                System.out.println("A new event was inserted successfully.");
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Asg.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Asg.class.getName()).log(Level.SEVERE, null, ex);
        }
        System.out.println("Time Duration: "+time+"hour(s)");
        JOptionPane.showMessageDialog(this, "Event Added");
        }
    }//GEN-LAST:event_UpdateButtonActionPerformed

    private void VenueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VenueActionPerformed
        venue = Venue.getText();
    }//GEN-LAST:event_VenueActionPerformed

    private void EventTitleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EventTitleActionPerformed
        eventTitle = EventTitle.getText();
    }//GEN-LAST:event_EventTitleActionPerformed

    private void BackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackButtonActionPerformed
        DisplayEvent displayFrame = new DisplayEvent(loggedInUsername,currentUserType);
        displayFrame.setVisible(true);
        dispose();
    }//GEN-LAST:event_BackButtonActionPerformed

    private void ClearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearButtonActionPerformed
        EventTitle.setText("");
        EventDes.setText("");
        Venue.setText("");
    
        StartTime.setSelectedIndex(0);
        EndTime.setSelectedIndex(0);
    
        DateChooser.setDate(null);
    }//GEN-LAST:event_ClearButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditEvent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditEvent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditEvent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditEvent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EditEvent().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BackButton;
    private javax.swing.JButton ClearButton;
    private com.toedter.calendar.JDateChooser DateChooser;
    private javax.swing.JComboBox<String> EndTime;
    private javax.swing.JTextField EventDes;
    private javax.swing.JTextField EventTitle;
    private javax.swing.JTextField IdEdit;
    private javax.swing.JButton SearchButton;
    private javax.swing.JComboBox<String> StartTime;
    private javax.swing.JButton UpdateButton;
    private javax.swing.JTextField Venue;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    // End of variables declaration//GEN-END:variables

    @Override
    public void insertUpdate(DocumentEvent e) {
        updateVariables();
    }

    @Override
    public void removeUpdate(DocumentEvent e) {
        updateVariables();
    }

    @Override
    public void changedUpdate(DocumentEvent e) {
        updateVariables();
    }

    private void updateVariables() {
        eventTitle = EventTitle.getText();
        eventDes = EventDes.getText();
        venue = Venue.getText();
    }
    
    public void search(){
        String searchText = EventTitle.getText();
        if (!searchText.isEmpty()) {
        clear();
    }
        int id = Integer.parseInt(IdEdit.getText());
        String sql = "SELECT * FROM event_create WHERE id = ?";
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection connection = DriverManager.getConnection(
                "jdbc:mysql://localhost:3306/event",
                "root", "SQL123123");
            PreparedStatement pst = connection.prepareStatement(sql);
            pst.setInt(1, id);
            ResultSet rs = pst.executeQuery();

            if (rs.next()) {
                if(rs.getString(9).equals(loggedInUsername)){
                EventTitle.setText(rs.getString("Name"));
                EventDes.setText(rs.getString("Description"));
                Venue.setText(rs.getString("Venue"));
                DateChooser.setDate(rs.getDate("Date"));
                StartTime.setSelectedItem(rs.getString("Start_Time"));
                EndTime.setSelectedItem(rs.getString("End_Time"));
                }
             else {
                // If no record found
                clear();
                JOptionPane.showMessageDialog(this, "No record found for ID: " + id);
            }
            } else {
                clear();
                JOptionPane.showMessageDialog(this, "No record found for ID: " + id);
            }

            connection.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
        }
    }
    
    public void clear(){
        EventTitle.setText("");
        EventDes.setText("");
        Venue.setText("");
        DateChooser.setDate(null);
        StartTime.setSelectedIndex(0);
        EndTime.setSelectedIndex(0);
    }
}
