/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package asg.Event;

import asg.Asg;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/**
 *
 * @author USER
 */
public class CreateEvent extends javax.swing.JFrame implements FocusListener {
    public int start, end, time;
    public String eventTitle,venue,eventDes,date,startTime,endTime,username,currentUserType;
//    public Date dateInDate;
    
    public String getDate() {
        return date;
    }
    /**
     * Creates new form CreateEvent
     */
    public CreateEvent() {
        initComponents();
        EventTitle.addFocusListener(this);
        EventDes.addFocusListener(this);
        VenueChooser.addFocusListener(this);
    }
    public CreateEvent(String loggedInUsername,String currentUserType) {
        initComponents();
        EventTitle.addFocusListener(this);
        EventDes.addFocusListener(this);
        VenueChooser.addFocusListener(this);
        this.username = loggedInUsername;  
        this.currentUserType = currentUserType;
        setLocationRelativeTo(null);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        CreateButton = new javax.swing.JButton();
        EventDes = new javax.swing.JTextField();
        EventTitle = new javax.swing.JTextField();
        VenueChooser = new javax.swing.JTextField();
        BackButton = new javax.swing.JButton();
        DateChooser = new com.toedter.calendar.JDateChooser();
        StartTime = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        EndTime = new javax.swing.JComboBox<>();
        ResetButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Create Event");

        jLabel2.setText("Event Title:");

        jLabel3.setText("Event Description:");

        jLabel4.setText("Event Venue:");

        jLabel5.setText("Event Date:");

        jLabel6.setText("Event Time:");

        CreateButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        CreateButton.setText("Create Event");
        CreateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreateButtonActionPerformed(evt);
            }
        });

        EventDes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EventDesActionPerformed(evt);
            }
        });

        EventTitle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EventTitleActionPerformed(evt);
            }
        });

        VenueChooser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VenueChooserActionPerformed(evt);
            }
        });

        BackButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        BackButton.setText("Back");
        BackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackButtonActionPerformed(evt);
            }
        });

        StartTime.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "8:00", "9:00", "10:00", "11:00", "12:00", "13:00", "14:00", "15:00", "16:00", "17:00", "18.00", "19:00", "20:00", "21:00", "22:00", "23:00", "0:00" }));
        StartTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StartTimeActionPerformed(evt);
            }
        });

        jLabel7.setText("TO");

        EndTime.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "8:00", "9:00", "10:00", "11:00", "12:00", "13:00", "14:00", "15:00", "16:00", "17:00", "18.00", "19:00", "20:00", "21:00", "22:00", "23:00", "0:00" }));
        EndTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EndTimeActionPerformed(evt);
            }
        });

        ResetButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        ResetButton.setText("Reset");
        ResetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResetButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(110, 110, 110)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(BackButton)
                        .addGap(16, 16, 16)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(EventTitle)
                            .addComponent(EventDes)
                            .addComponent(VenueChooser)
                            .addComponent(DateChooser, javax.swing.GroupLayout.DEFAULT_SIZE, 162, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(StartTime, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(EndTime, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(55, 55, 55))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(ResetButton)
                        .addGap(30, 30, 30)
                        .addComponent(CreateButton)
                        .addContainerGap(48, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(EventTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(EventDes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(VenueChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5)
                    .addComponent(DateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(StartTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(EndTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BackButton)
                    .addComponent(CreateButton)
                    .addComponent(ResetButton))
                .addGap(30, 30, 30))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CreateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreateButtonActionPerformed
        startTime = (String)StartTime.getSelectedItem();
        System.out.println(startTime);
        String[] parts = startTime.split(":");
        start = Integer.parseInt(parts[0]);
        System.out.println(start);
        
        endTime = (String)EndTime.getSelectedItem();
        System.out.println(endTime);
        String[] parts1 = endTime.split(":");
        end = Integer.parseInt(parts1[0]);
        System.out.println(end);
        
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        date = sdf.format(DateChooser.getDate());
        System.out.println("Date: "+date);

        time = end - start;
        if(time<=0){
            JOptionPane.showMessageDialog(this, "Time not valid, please select again");
        }
        else if(EventTitle.getText().isEmpty()||VenueChooser.getText().isEmpty() ||DateChooser.getDate()==null){
            JOptionPane.showMessageDialog(this, "Please make sure title, venue or date is not blank!");
        }
        else{
            Connection connection = null;
        
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            connection = DriverManager.getConnection(
                "jdbc:mysql://localhost:3306/event",
                "root", "SQL123123");
            System.out.println("Success");
            String sql = "INSERT INTO event_create (Name, Description, Venue, Date, Start_Time,End_Time, Duration_Hour, Username) VALUES (?, ?, ?, ?, ?, ?, ?, ?)";
            PreparedStatement pstmt = connection.prepareStatement(sql);
            
            // Set values for the event attributes
            pstmt.setString(1, eventTitle);
            pstmt.setString(2, eventDes);
            pstmt.setString(3, venue);
            pstmt.setString(4, date);
            pstmt.setString(5, startTime);
            pstmt.setString(6,endTime);
            pstmt.setLong(7,time);
            pstmt.setString(8,username);
            
            // Execute the SQL statement
            int rowsInserted = pstmt.executeUpdate();
            if (rowsInserted > 0) {
                System.out.println("A new event was inserted successfully.");
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Asg.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Asg.class.getName()).log(Level.SEVERE, null, ex);
        }
        System.out.println("Time Duration: "+time+"hour(s)");
        JOptionPane.showMessageDialog(this, "Event Added");
        }
    }//GEN-LAST:event_CreateButtonActionPerformed

    private void BackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackButtonActionPerformed
        DisplayEvent displayFrame = new DisplayEvent(username,currentUserType);
        displayFrame.setVisible(true);
        dispose();
    }//GEN-LAST:event_BackButtonActionPerformed

    private void VenueChooserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VenueChooserActionPerformed
        venue = VenueChooser.getText();
        System.out.println("Event Venue: "+venue);
    }//GEN-LAST:event_VenueChooserActionPerformed

    private void EventTitleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EventTitleActionPerformed
        eventTitle = EventTitle.getText();
        System.out.println("Event Title: "+eventTitle);
    }//GEN-LAST:event_EventTitleActionPerformed

    private void EventDesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EventDesActionPerformed
        eventDes = EventDes.getText();
        System.out.println("Event Description: "+eventDes);
    }//GEN-LAST:event_EventDesActionPerformed

    private void StartTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StartTimeActionPerformed
        
    }//GEN-LAST:event_StartTimeActionPerformed

    private void EndTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EndTimeActionPerformed
                
    }//GEN-LAST:event_EndTimeActionPerformed

    private void ResetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResetButtonActionPerformed
        EventTitle.setText("");
        EventDes.setText("");
        VenueChooser.setText("");
    
        StartTime.setSelectedIndex(0);
        EndTime.setSelectedIndex(0);
    
        DateChooser.setDate(null);
    }//GEN-LAST:event_ResetButtonActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CreateEvent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CreateEvent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CreateEvent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CreateEvent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CreateEvent().setVisible(true);
            }
        });
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BackButton;
    private javax.swing.JButton CreateButton;
    private com.toedter.calendar.JDateChooser DateChooser;
    private javax.swing.JComboBox<String> EndTime;
    private javax.swing.JTextField EventDes;
    private javax.swing.JTextField EventTitle;
    private javax.swing.JButton ResetButton;
    private javax.swing.JComboBox<String> StartTime;
    private javax.swing.JTextField VenueChooser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    // End of variables declaration//GEN-END:variables

    @Override
    public void focusGained(FocusEvent e) {
        
    }

    @Override
    public void focusLost(FocusEvent e) {
        if (e.getSource() == EventTitle) {
            eventTitle = EventTitle.getText();
        } else if (e.getSource() == EventDes) {
            eventDes = EventDes.getText();
        } else if (e.getSource() == VenueChooser) {
            venue = VenueChooser.getText();
        }
    }
    }
